def dfs_recursive(graph, start, visited=None):
    """
    Implementazione ricorsiva dell'algoritmo DFS.
    
    :param graph: Un dizionario che rappresenta il grafo, dove le chiavi sono nodi e i valori sono liste di nodi adiacenti.
    :param start: Il nodo da cui iniziare la ricerca.
    :param visited: Un set che tiene traccia dei nodi visitati.
    :return: None
    """
    if visited is None:
        visited = set()
    
    # Visita il nodo corrente
    visited.add(start)
    print(start, end=' ')
    
    # Ricorsivamente visita tutti i nodi adiacenti non visitati
    for neighbor in graph[start]:
        if neighbor not in visited:
            dfs_recursive(graph, neighbor, visited)

if __name__ == "__main__":
    graph = {
        'A': ['B', 'C'],
        'B': ['D', 'E'],
        'C': ['F'],
        'D': [],
        'E': ['F'],
        'F': []
    }
    print("DFS ricorsivo a partire dal nodo A:")
    dfs_recursive(graph, 'A')
