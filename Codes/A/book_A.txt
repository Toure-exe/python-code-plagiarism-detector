class Book:
    def __init__(self, title, author, year_published, genre):
        self.title = title
        self.author = author
        self.year_published = year_published
        self.genre = genre
        self.is_checked_out = False

    def check_out(self):
        if not self.is_checked_out:
            self.is_checked_out = True
            return f"The book '{self.title}' has been checked out."
        else:
            return f"The book '{self.title}' is already checked out."

    def return_book(self):
        if self.is_checked_out:
            self.is_checked_out = False
            return f"The book '{self.title}' has been returned."
        else:
            return f"The book '{self.title}' was not checked out."

    def book_details(self):
        return f"'{self.title}' by {self.author}, published in {self.year_published} - Genre: {self.genre}"

class Member:
    def __init__(self, name, member_id):
        self.name = name
        self.member_id = member_id
        self.checked_out_books = []

    def borrow_book(self, book):
        if len(self.checked_out_books) < 5:
            if not book.is_checked_out:
                book.check_out()
                self.checked_out_books.append(book)
                return f"{self.name} has borrowed '{book.title}'."
            else:
                return f"'{book.title}' is already checked out."
        else:
            return f"{self.name} cannot borrow more than 5 books at a time."

    def return_book(self, book):
        if book in self.checked_out_books:
            book.return_book()
            self.checked_out_books.remove(book)
            return f"{self.name} has returned '{book.title}'."
        else:
            return f"{self.name} does not have '{book.title}' borrowed."

    def member_details(self):
        books_list = ', '.join([book.title for book in self.checked_out_books]) if self.checked_out_books else "No books borrowed"
        return f"Member Name: {self.name}, ID: {self.member_id}, Borrowed Books: {books_list}"

class Library:
    def __init__(self, name):
        self.name = name
        self.books = []
        self.members = []

    def add_book(self, book):
        self.books.append(book)
        return f"The book '{book.title}' has been added to the library."

    def add_member(self, member):
        self.members.append(member)
        return f"Member '{member.name}' has been added to the library."

    def find_book(self, title):
        for book in self.books:
            if book.title == title:
                return book
        return None

    def library_details(self):
        books_list = ', '.join([book.title for book in self.books]) if self.books else "No books available"
        members_list = ', '.join([member.name for member in self.members]) if self.members else "No members registered"
        return f"Library Name: {self.name}, Books: {books_list}, Members: {members_list}"

def main():
    # Create a library
    library = Library("Central Library")

    # Add books to the library
    book1 = Book("1984", "George Orwell", 1949, "Dystopian")
    book2 = Book("To Kill a Mockingbird", "Harper Lee", 1960, "Fiction")
    book3 = Book("The Great Gatsby", "F. Scott Fitzgerald", 1925, "Classic")

    library.add_book(book1)
    library.add_book(book2)
    library.add_book(book3)

    # Add a member to the library
    member = Member("John Doe", "001")
    library.add_member(member)

    # Member borrows a book
    print(member.borrow_book(book1))
    print(member.borrow_book(book2))

    # Member tries to borrow a book that is already checked out
    print(member.borrow_book(book1))

    # Member returns a book
    print(member.return_book(book1))

    # Member details
    print(member.member_details())

    # Library details
    print(library.library_details())

if __name__ == "__main__":
    main()
